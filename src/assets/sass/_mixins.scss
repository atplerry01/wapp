// Responsive Breakpoints
@mixin breakpoint($point) {
    @if $point == large {
      @media (min-width: 64.375em) { @content; }
    }
    @else if $point == medium {
      @media (min-width: 50em) { @content; }
    }
    @else if $point == small {
      @media (min-width: 37.5em)  { @content; }
    }
  }

//   Usage:
    //   .page-wrap {
    //     width: 75%;
    //     @include breakpoint(large) { width: 60%; }
    //     @include breakpoint(medium) { width: 80%; }
    //     @include breakpoint(small) { width: 95%; }
    //   }



    // Retina Images
    @mixin image-2x($image, $width, $height) {
        @media (min--moz-device-pixel-ratio: 1.3),
               (-o-min-device-pixel-ratio: 2.6/2),
               (-webkit-min-device-pixel-ratio: 1.3),
               (min-device-pixel-ratio: 1.3),
               (min-resolution: 1.3dppx) {
          /* on retina, use image that's scaled by 2 */
          background-image: url($image);
          background-size: $width $height;
        }
      }

//     Usage:

// div.logo {
//    background: url("logo.png") no-repeat;
//    @include image-2x("logo2x.png", 100px, 25px);
//  }


//   Clearfix
@mixin clearfix() {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}
// Usage:

// .article {
//      @include clearfix();
// }

//Box Sizing  -- Reset your elements box model with ease.
@mixin box-sizing($box-model) {
    -webkit-box-sizing: $box-model; // Safari <= 5
       -moz-box-sizing: $box-model; // Firefox <= 19
            box-sizing: $box-model;
  }
//   Usage:

// *,
// *:after,
// *:before {
//   @include box-sizing(border-box);
// }



//Border Radius
@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    border-radius: $radius;
    background-clip: padding-box;  /* stops bg color from leaking outside the border: */
  }
  
  // Single side border-radius
  
  @mixin border-top-radius($radius) {
    -webkit-border-top-right-radius: $radius;
    border-top-right-radius: $radius;
     -webkit-border-top-left-radius: $radius;
     border-top-left-radius: $radius;
     background-clip: padding-box;
  }
  @mixin border-right-radius($radius) {
    -webkit-border-bottom-right-radius: $radius;
    border-bottom-right-radius: $radius;
       -webkit-border-top-right-radius: $radius;
       border-top-right-radius: $radius;
       background-clip: padding-box;
  }
  @mixin border-bottom-radius($radius) {
    -webkit-border-bottom-right-radius: $radius;
    border-bottom-right-radius: $radius;
     -webkit-border-bottom-left-radius: $radius;
     border-bottom-left-radius: $radius;
     background-clip: padding-box;
  }
  @mixin border-left-radius($radius) {
    -webkit-border-bottom-left-radius: $radius;
    border-bottom-left-radius: $radius;
       -webkit-border-top-left-radius: $radius;
       border-top-left-radius: $radius;
       background-clip: padding-box;
  }

//   Usage:

// .button {
//   @include border-radius(5px);
// }

// .submit-button {
//   @include border-top-radius(10px);
//   @include border-right-radius(8px);
//   @include border-bottom-radius(10px);
//   @include border-left-radius (6px);
// }


@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
    box-shadow:inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}

@mixin card-box-shadow{
  -webkit-box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
  -moz-box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
  //padding: 0 10px 5px 10px;
}

@mixin dropdown-box-shadow{
  -webkit-box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
  -moz-box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
padding: 12px 16px;
}

//Opacity -- Set the opacity for all browsers and provide a filter fallback for IE8.
@mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie); //IE8
  }
//   Usage:
  
//   .article-heading {
//     @include opacity(0.8);
//   }



// Center-align a block level element
// Quickly center any element within its parent. Requires width or max-width to be set.
@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}
// Usage:

// .footer-wrap {
//   width: 450px;
//   @include center-block;
// }

@mixin right-block {
  display: block;
  margin-left: auto;
  margin-right: 0;
}
@mixin left-block {
  display: block;
  margin-left: 0;
  margin-right: auto;
}

@mixin display-flex{
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
}

@mixin flex-align-end{
  @include display-flex;
 // display: flex;
  justify-content: flex-end;
  flex: 1;
}
// Text Overflow
// An easy way to truncate text with an ellipsis. Requires the element to be block or inline-block.
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
// Usage:

// .text-truncate {
//   @include text-truncate;
// }



// Absolute Positioned
// Pass in the desired location of your target element to produce all the necessary positioning code.
@mixin abs-pos ($top: auto, $right: auto, $bottom: auto, $left: auto) {
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  position: absolute;
}
// Usage:

// .abs {
//   @include abs-pos(10px, 10px, 5px, 15px);
// }


// Font Size
// This mixin sets the font size in rem's with a px fallback.
@mixin font-size($sizeValue: 12 ){
  font-size: $sizeValue + px; //fallback for old browsers
  font-size: (0.125 * $sizeValue) + rem;
}
// Usage:

// body {
//   @include font-size(16);
// }



// Line Height
// This mixin sets the line height in rem's with a px fallback.
@mixin line-height($heightValue: 12 ){
    line-height: $heightValue + px; //fallback for old browsers
    line-height: (0.125 * $heightValue) + rem;
}
// Usage:

// body {
//   @include line-height (16);
// }

@mixin rounded($radius: 0.5em) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}

@mixin gradient($from, $to) {
  background: -webkit-gradient(linear, left top, left bottom, from($from), to($to));
  background: -moz-linear-gradient(top,  $from, $to);
  filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$from}', endColorstr='#{$to}');
}


@mixin menu-list-bottom-border-color($color) {
  position: relative;
  &::after{
    content: '';
    border-bottom: 2px solid $color;
    width: 80%;
    position: absolute;
    bottom: 0;    
    display: flex;
   justify-content: center;
   flex: 1;
  }

}